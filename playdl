#!/bin/bash

## Program Initialization, Playdl asks the user for their preference.
DownloadPreference=$(zenity --list --title="Playdl Configuration" --column="0" "Video and Audio" "Audio Only" "Video Only" "Update (Arch Linux)" --width=100 --height=400 --hide-header)
## Check for valid choice
if [ -z "$DownloadPreference" ]; then
		exit 1
fi
## Core Functions
GetYouTubeVariables() {
	## This function collects the needed variables from the user about the video/playlist being downloaded
	Variables=$(zenity --forms --title="Playdl" --text="Enter playlist/video information" --separator="," --add-entry="Playlist Title" --add-entry="Link" --width=100 --height=300) accepted=$?
	## Cut the first part of the input to obtain the name
	PlayName=$(awk -F, '{print $1}' <<<$Variables)
	## And the second to get the link
	PlayLink=$(awk -F, '{print $2}' <<<$Variables)
	## Check that user input the correct values
	if [ -z "$PlayName" ]; then
		exit 1
	fi
	if [ -z "$PlayLink" ]; then
		exit 1
	fi
}
GetQuality() {
	## Ask user for video quality
	DownloadQuality=$(zenity --list --title="Playdl Quality Selection" --column="0" 360 480 720 1080 2160 --width=100 --height=400 --hide-header)
	## Format the string for youtube-dl
	Quality="bestvideo[height<=$DownloadQuality]+bestaudio[ext=m4a]"
}
LocateAudio() {
	## Ask the user for where to download the audio files
	zenity --info --width=400 --text="Please pick the download location for the audio"
	## Set the location
	AudioLocation=$(zenity --file-selection --directory)
}
LocateVideo() {
	## Ask the user for where to download the video files
	zenity --info --width=400 --text="Please pick the download location for the video"
	## Set the location
	VideoLocation=$(zenity --file-selection --directory)
}
AudioMode () {
	## Create folder in the destination, or use existing folder.
	cd $AudioLocation
	[ -d "$PlayName" ] || mkdir "$PlayName"
	cd "$PlayName"
	## Base code, downloads the audio directly in xterm and pipes it through ffmpeg to upscale it, then pipes the whole command to zenity for a progress bar
	(xterm -e youtube-dl -i -c -x --retries infinite -f 'bestaudio[ext=m4a]' --audio-quality 0 --no-overwrites --add-metadata --embed-thumbnail --youtube-skip-dash-manifest -o '%(title)s.%(ext)s' --exec "ffmpeg -i {}  -codec:a libmp3lame -qscale:a 0 {}.mp3 && rm {} " $PlayLink) |
	zenity --progress \
	--title="Downloading audio" \
	--text="Fetching files from YouTube... Close the xterm window to stop the download." \
	--percentage=0 \
	--pulsate \
	--auto-close \
	--auto-kill

}
VideoMode() {
	cd $VideoLocation
	[ -d "$PlayName" ] || mkdir "$PlayName"
	cd "$PlayName"
	## Base code, downloads the video, then pipes the whole command to zenity for a progress bar
	(xterm -e youtube-dl -i -c --write-srt -f $Quality --sub-lang en --retries infinite --audio-quality 0 --no-overwrites --add-metadata --youtube-skip-dash-manifest --embed-thumbnail --embed-subs -o '%(title)s.%(ext)s' $PlayLink) |
	zenity --progress \
	--title="Downloading video" \
	--text="Fetching video from YouTube... Close the xterm window to stop the download." \
	--percentage=0 \
	--pulsate \
	--auto-close \
	--auto-kill
}
if [ "$DownloadPreference" == "Video and Audio" ]; then
	## Driver functionality
	GetYouTubeVariables && GetQuality && LocateAudio && LocateVideo && AudioMode && VideoMode
fi
if [ "$DownloadPreference" == "Audio Only" ]; then
	## Driver functionality
	GetYouTubeVariables && LocateAudio && AudioMode
fi

if [ "$DownloadPreference" == "Video Only" ]; then
	## Driver functionality
	GetYouTubeVariables && GetQuality && LocateVideo && VideoMode
fi
if [ "$DownloadPreference" == "Update (Arch Linux)" ]; then
cd /tmp
git clone https://github.com/aliraslan/playdl
cd playdl
makepkg -si
cd ..
rm -rf playdl
fi
notify-send -u low -t 200 -a Playdl "Playdl has finished."
